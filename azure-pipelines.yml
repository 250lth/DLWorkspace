# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- citest

pool:
  name: 'DLTS-Platform'

# container: ubuntu:18.04

variables: { SUBSCRIPTION_NAME: "'Bing DLTS'" }

steps:
- script: |
    cd src/ClusterBootstrap/
    az account set --subscription $(SUBSCRIPTION_NAME)
  displayName: 'Install prerequisites'

- script: |
    cd src/ContinuousIntegration/
    ./set_config.sh
    cd ../ClusterBootstrap/
    ./bash_step_by_step_deploy.sh
  displayName: 'Deploy DLWorkspace'

- script: |
    cd src/ContinuousIntegration/

    ./pscp_role.sh worker check_machine.sh /home/core
    ./pssh_role.sh worker "bash check_machine.sh"

    ./check_node_ready.sh infra
    ./pscp_role.sh infra check_docker_ready.sh /home/core
    ./pssh_role.sh infra "bash ./check_docker_ready.sh infra"

    ./check_node_ready.sh worker
    ./pscp_role.sh worker check_docker_ready.sh /home/core
    ./pssh_role.sh worker "bash ./check_docker_ready.sh worker"

    ./pssh_role.sh worker "bash ./check_docker_ready.sh postlbl"
    ./pssh_role.sh infra "bash check_docker_ready.sh services"
  displayName: 'Verify deployment'

- script: |
    echo TODO: RUN functional tests!
  displayName: 'Functional tests'

- script: |
    echo TODO: cleanup the deployment!
  displayName: 'Cleanup'
