{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
              "description": "User name for the virtual machines."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
              "description": "Password for the virtual machines ."
            }
        },
        "numberOfInfraVM": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of infra-VM to deploy."
            }
        },
        "infraVMSize": {
            "type": "string",
            "defaultValue": "Standard_DS1_v2",
            "metadata": {
                "description": "Size of the infra-VM. Use a CPU VM for infra-VM." 
            }
        },
        "numberOfWorkerVM": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of worker-VM to deploy."
            }
        },
        "workerVMSize": {
            "type": "string",
            "defaultValue": "Standard_NC6",
            "metadata": {
                "description": "Size of the worker-VM. Use a GPU VM for worker-VM."
            }
        }
    },
    "variables": {
        "standardStorageAccountType": "Standard_LRS",
        "standardVMSize": "Standard_D1_v2",
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "ubuntuOSVersion": "16.04.0-LTS",
        "clusterName": "[substring(resourceGroup().name, 0, sub(length(resourceGroup().name), 6))]",
        "clusterLocation": "[resourceGroup().location]",
        "virtualNetworkName": "[concat(resourceGroup().name, '-vNet')]",
        "subnetName": "VMSubnet",
        "addressPrefix": "192.168.0.0/16"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('clusterName'),'-dev')]",
            "apiVersion": "2017-12-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('standardVMSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[variables('standardStorageAccountType')]"
                        }
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(variables('clusterName'),'-dev')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/dlwsadmin/.ssh/authorized_keys",                                    
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCUuJmolEu7m1dSaCR0haU0FAXCh+vibIEvXxDUrx3JOnXRtDfxACkNEwx/zeBoyPFCSrrKZ63At3H9eiugQ9eEgWh4I4xPGm1IkFtkLuSVSJVJiC55lK4UzFYV4OSoLa128Dl3zzeHJ7gUwZimV4+sYnzJKzrNJ0hJgLhgf8HdsYT/itDes2WE4NlJTnoMyVTwOCE8ZXjgxOkCozmwT5GR3vGZercGmSs+Pw5ob9E+CxWZYfVehw2No4eLoHEeFdE+imj8TnNipW3Mo4FViTbf9z3TvhYn2uTrU29J2RQ8ud095StZDt7XNGb8PAN6b2jc2EAABn0OSSyP1/SrKnI5"
                                }
                            ]
                        }
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('clusterName'),'-dev', '-NIC'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2017-12-01",
                    "type": "extensions",
                    "name": "setupdevbox",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('clusterName'),'-dev'))]"
                    ],
                    "tags": {
                        "displayName": "config-app"
                    },
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                        "fileUris": [
                            "https://raw.githubusercontent.com/Microsoft/DLWorkspace/ARMTemplate/src/ARM/setupdevbox.sh"
                        ],
                        "timestamp": 123434234
                        },
                        "protectedSettings": {
                        "commandToExecute": "[concat('bash setupdevbox.sh ','--cluster_name ', variables('clustername'),' ', '--cluster_location ', variables('clusterlocation'),' ', '--worker_vm_size ', parameters('workerVMSize'), ' ', '--infra_vm_size ', parameters('infraVMSize'), ' ', '--worker_node_num ', parameters('numberOfWorkerVM'), ' ', '--infra_node_num ', parameters('numberOfInfraVM'), ' ', '--password ', parameters('adminPassword'), ' ', '--users ', parameters('adminUsername'))]"
                        }
                    }
                }
                
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('clusterName'),'-dev', '-NIC'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('clusterName'),'-infra0', copyIndex(1))]",
            "apiVersion": "2017-12-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "infraVMLoop",
                "count": "[parameters('numberOfInfraVM')]"
              },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('infraVMSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[variables('standardStorageAccountType')]"
                        }
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(variables('clusterName'),'-infra0', copyIndex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/dlwsadmin/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCUuJmolEu7m1dSaCR0haU0FAXCh+vibIEvXxDUrx3JOnXRtDfxACkNEwx/zeBoyPFCSrrKZ63At3H9eiugQ9eEgWh4I4xPGm1IkFtkLuSVSJVJiC55lK4UzFYV4OSoLa128Dl3zzeHJ7gUwZimV4+sYnzJKzrNJ0hJgLhgf8HdsYT/itDes2WE4NlJTnoMyVTwOCE8ZXjgxOkCozmwT5GR3vGZercGmSs+Pw5ob9E+CxWZYfVehw2No4eLoHEeFdE+imj8TnNipW3Mo4FViTbf9z3TvhYn2uTrU29J2RQ8ud095StZDt7XNGb8PAN6b2jc2EAABn0OSSyP1/SrKnI5"
                                }
                            ]
                        }
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('clusterName'),'-infra0', copyIndex(1), '-NIC'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('clusterName'),'-infra0', copyIndex(1), '-NIC'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('clusterName'),'-worker0', copyIndex(1))]",
            "apiVersion": "2017-12-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "workerVMLoop",
                "count": "[parameters('numberOfWorkerVM')]"
              },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('workerVMSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[variables('standardStorageAccountType')]"
                        }
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(variables('clusterName'),'-worker0', copyIndex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/dlwsadmin/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCUuJmolEu7m1dSaCR0haU0FAXCh+vibIEvXxDUrx3JOnXRtDfxACkNEwx/zeBoyPFCSrrKZ63At3H9eiugQ9eEgWh4I4xPGm1IkFtkLuSVSJVJiC55lK4UzFYV4OSoLa128Dl3zzeHJ7gUwZimV4+sYnzJKzrNJ0hJgLhgf8HdsYT/itDes2WE4NlJTnoMyVTwOCE8ZXjgxOkCozmwT5GR3vGZercGmSs+Pw5ob9E+CxWZYfVehw2No4eLoHEeFdE+imj8TnNipW3Mo4FViTbf9z3TvhYn2uTrU29J2RQ8ud095StZDt7XNGb8PAN6b2jc2EAABn0OSSyP1/SrKnI5"
                                }
                            ]
                        }
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('clusterName'),'-worker0', copyIndex(1), '-NIC'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('clusterName'),'-worker0', copyIndex(1), '-NIC'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[concat(variables('clusterName'),'-dev', '-PublicIP')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(variables('clusterName'),'-dev'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[concat(variables('clusterName'),'-infra0', copyIndex(1), '-PublicIP')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "infraVMPublicIPLoop",
                "count": "[parameters('numberOfInfraVM')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(variables('clusterName'),'-infra0', copyIndex(1)))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[concat(variables('clusterName'),'-worker0', copyIndex(1), '-PublicIP')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "workerVMPublicIPLoop",
                "count": "[parameters('numberOfWorkerVM')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(variables('clusterName'),'-worker0', copyIndex(1)))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('clusterName'),'-dev', '-NIC')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('clusterName'),'-dev', '-IPConfig')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('clusterName'),'-dev', '-PublicIP'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('clusterName'), '-NSG'))]"
                },
                "primary": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('clusterName'),'-dev', '-PublicIP'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('clusterName'), '-NSG'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('clusterName'),'-infra0', copyIndex(1), '-NIC')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "infraVMNICLoop",
                "count": "[parameters('numberOfInfraVM')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('clusterName'),'-infra0', copyIndex(1), '-IPConfig')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('clusterName'),'-infra0', copyIndex(1), '-PublicIP'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('clusterName'), '-NSG'))]"
                },
                "primary": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('clusterName'),'-infra0', copyIndex(1), '-PublicIP'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('clusterName'), '-NSG'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('clusterName'),'-worker0', copyIndex(1), '-NIC')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "workerVMNICLoop",
                "count": "[parameters('numberOfWorkerVM')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('clusterName'),'-worker0', copyIndex(1), '-IPConfig')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('clusterName'),'-worker0', copyIndex(1), '-PublicIP'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('clusterName'), '-NSG'))]"
                },
                "primary": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('clusterName'),'-worker0', copyIndex(1), '-PublicIP'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('clusterName'), '-NSG'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('clusterName'), '-NSG')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": ["[variables('addressPrefix')]"]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('addressPrefix')]"
                        }
                    }
                ]
            }
        }
    ]
}
