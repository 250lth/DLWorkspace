@{
    ViewData["Title"] = "Submit Your Job";
}

<script>
    $(document).ready(function () {
        $('#submit_job').on('submit', function (e) { //use on if jQuery 1.7+
            e.preventDefault();  //prevent form from submitting
            var params = "";

            var jobname = $("#jobname").val().trim();
            var workpath = encodeURIComponent($("#workpath").val().trim());
            var datapath = encodeURIComponent($("#datapath").val().trim());
            var jobpath = encodeURIComponent($("#jobpath").val().trim());
            var image = encodeURIComponent($("#image").val().trim());
            var cmd = encodeURIComponent($("#cmd").val().trim());
            var logdir = encodeURIComponent($("#logdir").val().trim());
            var interactiveport = encodeURIComponent($("#interactivePort").val().trim());


            var numGPUsInt = parseInt($('#resourcegpu').val());
            var numGPUStr = $('#resourcegpu').val();


            //var jobtrainingtype = encodeURIComponent($("#jobtrainingtype").val().trim());


            var radios = document.getElementsByName('jobtrainingtype');

            for (var i = 0, length = radios.length; i < length; i++) {
                if (radios[i].checked) {
                    var jobtrainingtype = encodeURIComponent(radios[i].value.trim());
                    break;
                }
            }

            var numps = parseInt($('#numps').val());
            var numpsworker = parseInt($('#numpsworker').val());
            var nummpiworker = parseInt($('#nummpiworker').val());


            if (numGPUsInt < 0 || numGPUsInt > 8) {
                alert("Invalid GPU number:" + numGPUStr + ". GPU number has to be 0 - 8 in regular job");
                return;
            }

            if (jobname == "") {
                alert("Job Name cannot be empty!");
                return;
            }
            if (workpath == "") {
                alert("Work Path cannot be empty!");
                return;
            }
            if (datapath == "") {
                alert("Data Path cannot be empty!");
                return;
            }

            if (image == "") {
                alert("Docker Image cannot be empty!");
                return;
            }

            if (cmd == "") {
                alert("Default CMD in docker image:" + image + ". will be executed");
            }

            params = params + "resourcegpu=" + numGPUStr + "&";
            params = params + "jobName=" + jobname + "&";
            params = params + "workPath=" + workpath + "&";
            params = params + "dataPath=" + datapath + "&";

            var jobpath = $('#jobpath').val();
            if (jobpath != "") {
                params = params + "jobPath=" + jobpath + "&";
            }

            params = params + "image=" + image + "&";
            params = params + "cmd=" + cmd + "&";

            var logdir = $('#logdir').val();
            if (logdir != "") {
                params = params + "logDir=" + logdir + "&";
            }

            if (interactiveport != "") {
                params = params + "interactivePort=" + interactiveport + "&";
            }

            params = params + "jobType=training&";
            params = params + "jobtrainingtype=" + jobtrainingtype+"&";

            if (jobtrainingtype == "PSDistJob")
            {
                params = params + "numps=" + numps + "&";
                params = params + "numpsworker=" + numpsworker+"&";
            }

            if (jobtrainingtype == "MPIDistJob") {
                params = params + "nummpiworker=" + nummpiworker + "&";
            }



            var runningasroot = document.getElementById("runningasroot").checked ? "1" : "0";
            params = params + "runningasroot=" + runningasroot + "&";

            var url = "/api/dlws/SubmitJob?" + params;

            console.log(url);
            $("#submit").attr("disabled", true);

            $.ajax({
                url: url,
                dataType: 'json',
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("RestfulAPI error!");
                    $("#submit").attr("disabled", false);
                },
                timeout: 10000 //10 second timeout
            }).done(
                function (payload) {
                    console.log(payload);
                    if (payload.jobId) {
                        alert("Job Submitted! \n Job ID:" + payload.jobId)
                        location.href = "/Home/ViewJobs";
                    } else if (payload.error) {
                        alert("Error: " + payload.error, "Alert");
                        $("#submit").attr("disabled", false);
                    } else {
                        alert("Unexpected error: " + payload, "Alert");
                        $("#submit").attr("disabled", false);
                    }

                });

        });
    });
</script>

<script type="text/javascript">
    function ShowHideDiv(chkbox, divId) {
        var elem = document.getElementById(divId);
        elem.style.display = chkbox.checked ? "block" : "none";
    }
    function ShowRegularJob() {

        var elem2 = document.getElementById("PSDistJob");
        elem2.style.display = "none";


    }
    function ShowPSDistJob() {

        var elem2 = document.getElementById("PSDistJob");
        elem2.style.display = "block";

    }

    function UseTemplate(id) {

        var settings = JSON.parse(id);

        document.getElementById("jobname").value = (settings.job_name === undefined) ? "" : settings.job_name;
        document.getElementById("resourcegpu").value = (settings.gpu_count === undefined) ? 0 : settings.gpu_count;
        document.getElementById("workpath").value = (settings.work_path === undefined) ? "@ViewData["Username"]" : settings.work_path;
        document.getElementById("datapath").value = (settings.data_path === undefined) ? "imagenet" : settings.data_path;
        document.getElementById("jobpath").value = (settings.job_path === undefined) ? "" : settings.job_path;
        document.getElementById("image").value = (settings.image === undefined) ? "" : settings.image;
        document.getElementById("cmd").value = (settings.cmd === undefined) ? "" : replaceViewData(settings.cmd);
        document.getElementById("chkInteractiveJob").checked = settings.is_interactive;
        document.getElementById("chkLogDir").checked = settings.do_log;
        ShowHideDiv(document.getElementById("chkInteractiveJob"), 'interactiveportfield')
        ShowHideDiv(document.getElementById("chkLogDir"), 'logdirfield')
        document.getElementById("interactivePort").value = (settings.port === undefined) ? "8888" : settings.port;
        document.getElementById("logdir").value = (settings.log_path === undefined) ? "" : settings.log_path;
        document.getElementById("runningasroot").checked = settings.run_as_root;
    }

    function replaceViewData(str) {
        str = str.replace(/ViewData\[Username\]/g, "@ViewData["Username"]");
        str = str.replace(/ViewData\[gid\]/g, "@ViewData["gid"]");
        str = str.replace(/ViewData\[uid\]/g, "@ViewData["uid"]");
        return str;
    }
</script>

<div class="modal-dialog" role="document">
    <div class="modal-content">
        <form method="POST" id="submit_job">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="submitModalLabel">Submit Job</h4>
            </div>

            <div class="modal-body">



                <div class="form-group">
                    <label>
                        Use Template
                    </label>
                    <br />
                    <select onchange="UseTemplate(this.value)">
                        @foreach (var item in ViewData["templates"] as List<string[]>)
                        {
                            <option value="@item[2]">@item[0]</option>
                        }
                    </select>

                </div>
                <div class="form-group">
                    <label>
                        Job Type
                    </label>
                    <br/>
                    <input type="radio" name="jobtrainingtype" id="jobtrainingtype" value="RegularJob" checked="checked"  onclick="ShowRegularJob()" /> Regular Training Job  <br />
                    <input type="radio" name="jobtrainingtype" id="jobtrainingtype" value="PSDistJob" onclick="ShowPSDistJob()" /> Distributed Training Job  <br />
                </div>

                <div class="form-group">
                    <label>
                        Job Name
                    </label>
                    <input type="text" class="form-control" id="jobname" />
                </div>

                <div class="form-group">
                    <label>
                        Number of GPUs
                    </label>
                    <input type="number" class="form-control" id="resourcegpu" value="0" />
                </div>


                <div id="PSDistJob" hidden>
                    <div class="form-group">
                        <label>
                            Number of Parameter Servers
                        </label>
                        <input type="number" class="form-control" id="numps" value="1" />
                    </div>
                    <div class="form-group">
                        <label>
                            Number of Workers
                        </label>
                        <input type="number" class="form-control" id="numpsworker" value="1" />
                    </div>
                </div>


                <div class="form-group">
                    <label>
                        Work Directory <font face="verdana" color="#A9A9A9">(relative to <a href="@ViewData["workPath"]">@ViewData["workPath"].ToString().Replace("file:", "").Replace("/", "\\") </a>).  </font> <br /> <font face="verdana" color="#A9A9A9"> This folder is mounted as <b>/work</b> inside container.</font>
                    </label>
                    <input type="text" class="form-control" id="workpath" />

                    
                </div>

                <div class="form-group">
                    <label>
                        Data Directory <font face="verdana" color="#A9A9A9">(relative to <a href="@ViewData["dataPath"]">@ViewData["dataPath"].ToString().Replace("file:", "").Replace("/", "\\") </a>). </font> <br /> <font face="verdana" color="#A9A9A9"> This folder is mounted as <b>/data</b> inside container.</font>
                    </label>
                    <input type="text" class="form-control" id="datapath" />
                </div>

                <div class="form-group">
                    <label>
                        Job Directory (empty by default) <br /> <font face="verdana" color="#A9A9A9"> This folder is mounted as <b>/job</b> inside container.</font>
                    </label>
                    <input type="text" class="form-control" id="jobpath" />
                </div>

                <div class="form-group">
                    <label>
                        Docker Image
                    </label>
                    <input list="imagelist" class="form-control" name="image" id="image" />
                    <datalist  id="imagelist">
                        <option value="mlcloudreg.westus.cloudapp.azure.com:5000/philly/agi-tf-0.12.1-src-ubuntu-16.04:latest" />
                        <option value="mlcloudreg.westus.cloudapp.azure.com:5000/philly/agi-tf-1.1.0-src-ubuntu-16.04:latest" />
                        <option value="mlcloudreg.westus.cloudapp.azure.com:5000/philly/agi-tf-pytorch-0.12.1-src-ubuntu-16.04:latest" />
                    </datalist>
                </div>

                <div class="form-group">
                    <label>
                        Training Command
                    </label>
                    <textarea type="text" class="form-control" id="cmd" rows="5" > </textarea>
                </div>

                <div class="form-group">
                    <input type="checkbox" id="chkLogDir" onclick="ShowHideDiv(this,'logdirfield')" />
                    <label>
                        Enable TensorBoard
                    </label>
                    <div id="logdirfield" hidden>
                        <label>Model path:</label>
                        <input type="text" class="form-control" id="logdir" />
                    </div>
                </div>

                <div class="form-group">
                    <input type="checkbox" id="chkInteractiveJob" onclick="ShowHideDiv(this, 'interactiveportfield')" />
                    <label>
                        Interactive Job? (e.g. ipython, ssh)
                    </label>
                    <div id="interactiveportfield" hidden>
                        <label>Port used by interactive job:</label>
                        <input type="text" class="form-control" id="interactivePort" />
                    </div>
                </div>

                <div class="form-group">
                    <input type="checkbox" id="runningasroot" />
                    <label>
                        Running as ROOT. (e.g. for ssh jobs)
                    </label>
                </div>

            </div>
            <div class="modal-footer">
                <input type="submit" value="Submit" name="submit" class="btn btn-success" id="submit" />
            </div>
        </form>
    </div>
</div>
